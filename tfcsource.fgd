//-------------------------------------------------------------------------
//
// Game data for Team Fortress Classic Source.
//
//-------------------------------------------------------------------------

@include "base.fgd"

@BaseClass = TeamNum
[
	TeamNum(choices) : "Team Number (int)" : 0 =
	[
		2 : "Red"
		3 : "Blue"
		4 : "Yellow"
		5 : "Green"
	]

	input SetTeam(integer) : "Changes the entity's team"
]

@BaseClass base(Targetname, Origin, Global, prop_static_base) = BaseVehicle
[
	vehiclescript(string) : "Vehicle Script File" : "scripts/vehicles/jeep_test.txt"
	actionScale(float) : "Scale of action input / framerate" : "1"

	// Inputs
	input Action(float) : "Set the speed of the action animation"

	input TurnOn(void) : "Turn on: Start engine & enable throttle"
	input TurnOff(void) : "Turn off: Stop engine, disable throttle, engage brakes."

	input Lock(void) : "Prevent the player from entering or exiting the vehicle."
	input Unlock(void) : "Re-allow the player to enter or exit the vehicle."
]

@BaseClass base(BaseVehicle) = BaseDriveableVehicle
[
	VehicleLocked(choices) : "Start locked" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]	

	// Outputs
	output PlayerOn(void) : "Player entered the vehicle"
	output PlayerOff(void) : "Player exited the vehicle"
	
	output PressedAttack(void) : "Player Pressed attack key"
	output PressedAttack2(void) : "Player Pressed attack2 key"

	output AttackAxis(string) : "State of attack button [0,1]"
	output Attack2Axis(string) : "State of attack2 button [0,1]"
	
	// Inputs
	input HandBrakeOn(void) : "Turns the handbrake on"
	input HandBrakeOff(void): "Releases the handbrake"
]

@SolidClass = func_ladder : 
	"Ladder. Players will be able to freely along this brush, as if it was a ladder. If you are using a model prop " +
	"for the visual representation of the ladder in the map, apply the toolsinvisibleladder material to the " +
	"func_ladder brush."
[
]

@PointClass base(Angles,Targetname,TeamNum,EnableDisable) studioprop("models/editor/playerstart.mdl") = info_player_teamspawn :
	"This entity marks the spawn point for Team Fortress Classic players."
[
]

@FilterClass base(BaseFilter) size(-8 -8 -8, 8 8 8) = filter_activator_team :
	"A filter that filters by the team of the activator."
[
	filterteam(choices) : "Filter Team Number" : 2 : 
		"The team number to filter by. If the filter mode is Allow, only entities whose "+
		"team number matches the given team will pass the filter. If the filter mode is Disallow, "+
		"all entities EXCEPT those whose team number matches the given team will pass the filter." =
	[
		2 : "Red"
		3 : "Blue"
		4 : "Yellow"
		5 : "Green"
	]
]

@PointClass base(Angles) = env_detail_controller : "An entity that lets you control the fade distances for detail props."
[
	fademindist(float) : "Start Fade Dist/Pixels" : 400 : "Distance at which the prop starts to fade."
	fademaxdist(float) : "End Fade Dist/Pixels" : 1200 : "Maximum distance at which the prop is visible."
]

@SolidClass base(Targetname, Parentname, Origin, RenderFields, Global) = func_vehicle : "Drivable Vehicles" 
[
	spawnflags(flags) =
	[
		1 : "No Pitch (X-rot)" : 0
		2 : "No User Control" : 0
		8 : "Passable" : 0
	]
	target(target_destination) : "First Stop Target" : "" : "The name of the first path_track in the vehicle's path. The vehicle " +
		"will spawn at this path_track. It will also turn to face direction indicated by the 'Orientation Type' setting."
	sounds(choices) : "Sound" : "" =
	[
		"": "None"
		1: "Vehicle 1"
		2: "Vehicle 2"
		3: "Vehicle 3"
		4: "Vehicle 4"
		5: "Vehicle 6"
		6: "Vehicle 7"
	]
	length(integer) : "Length of the vehicle" : 256
	width(integer) : "Width of the vehicle" : 128
	height(integer) : "Height above track" : 4
//*
//*note: max speed is 2000 or things go wrong
//*
	startspeed(integer) : "Initial speed" : 0
	speed(integer) : "Speed (units per second)" : 64
	dmg(integer) : "Damage on Crush" : 0 : "The amount of damage this train does to entities that block it."
	volume(integer) : "Volume (10 = loudest)" : 10
	bank(string) : "Bank Angle on Turns" : "0"
	_minlight(string) : "Minimum Light Level" : : "The minimum level of ambient light that hits this brush."
]

@SolidClass base(Parentname,Global) = func_vehiclecontrols : "Vehicle Controls"
[
	target(target_destination) : "Vehicle Name" : : "The target Vehicle to control when the player uses these controls."
]

@PointClass base(prop_physics) studioprop() sphere(fademindist) sphere(fademaxdist) = prop_physics_respawnable :
	"This class is the same as prop_physics, except it respawns after it breaks"
[
	RespawnTime(float) : "Respawn Time" : 60 : "Amount in seconds this prop will respawn after it breaks."
]

@PointClass base(BaseVehicle) studioprop() = prop_vehicle :
	"Studiomodel vehicle that can be driven via inputs."
[
	// Inputs
	input Steer(float) : "Steer the vehicle +/-1"
	input Throttle(float) : "Throttle +/-1"

	spawnflags(flags) =
	[
		1 : "Always Think (Run physics every frame)" : 0
	]
]


@PointClass base(BaseDriveableVehicle) studioprop() = prop_vehicle_driveable :
	"Generic driveable studiomodel vehicle."
[
]

@SolidClass base(func_physbox) = func_physbox_multiplayer : 
	"This class is the same as func_physbox, except the runtime collisions use a more bouncy method that avoids " +
	"the prediction errors normal physics objects get."
[
]

@SolidClass base(Targetname, TeamNum) = func_ctf_goal:  
	"For CTF. Players can bring here their flag/dozier or ball."
[
]

@PointClass base(Targetname, Parentname, Angles) size(-2 -2 -2, 2 2 2) frustum(lightfov,nearz,farz,lightcolor,-1) = env_projectedtexture : 
	"Projected texture entity."
[
	spawnflags(flags) =
	[
		1  : "Enabled"				: 1
	]

	texturename(material)	: "Texture" : : "path/texture to be projected. Relative to main/materials/"
	target(target_destination)	: "target" : : "target"	
	lightfov(float)				: "FOV" : "90.0" : "FOV"
	nearz(float)				: "NearZ" : "4.0" : "Near Z for projected texture"
	farz(float)					: "FarZ" : "750.0" : "Far Z for projected texture"	
	
	enableshadows(Choices) : "Enable Shadows" : 0 : "Enables/disables shadows from this projected texture." =
	[
		0 : "No"
		1 : "Yes"
	]
	shadowquality(Choices) : "Shadow Quality" : 1 : "Quality of shadows." =
	[
		0 : "Low"
		1 : "High"
	]
	lightonlytarget(Choices) : "Light Only Target" : 0 : "Limit flashlight effect to only effect target entity." =
	[
		0 : "No"
		1 : "Yes"
	]
	lightworld(Choices) : "Light World" : 1 : "Control whether flashlight effects static world geometry." =
	[
		0 : "No"
		1 : "Yes"
	]
	lightcolor(color255)		: "Light Color" : "255 255 255 200" : "Light Color RGB-Intensity"
	cameraspace(integer)		: "Camera Space" : 0 : "Angles are interpreted as being relative to camera."

	// Inputs
	input TurnOn(void)		: "Turn on the texture"
	input TurnOff(void)		: "Turn off the texture"
	input SetFOV(float)		: "Set FOV"
]

//-------------------------------------------------------------------------
//
// Items
//
//-------------------------------------------------------------------------
@BaseClass color(0 0 200) base(Targetname, Angles, Shadow) sphere(fademindist) sphere(fademaxdist) = Item
[
	output OnPlayerTouch(void) : "Fires when the player touches this object"

	output OnCacheInteraction(void) : "This output fires when the player proves they have 'found' this item. Fires on: Player Touch (whether or not player actually acquires the item), Picked up by +USE."

	fademindist(float) : "Start Fade Dist/Pixels" : -1 : "Distance at which the prop starts to fade (<0 = use fademaxdist). If 'Screen Space Fade' is selected, this represents the number of pixels wide covered by the prop when it starts to fade."
	fademaxdist(float) : "End Fade Dist/Pixels" : 0 : "Maximum distance at which the prop is visible (0 = don't fade out). If 'Screen Space Fade' is selected, this represents the *minimum* number of pixels wide covered by the prop when it fades."
	fadescale(float) : "Fade Scale" : 1 : "If you specify a fade in the worldspawn, or if the engine is running under dx7, then the engine will forcibly fade out props even if fademindist/fademaxdist isn't specified." +
												 " This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades." +

	spawnflags(Flags) =
	[
		1 : "Start Constrained" : 0
	]
]

//-------------------------------------------------------------------------
//
// Ammo
//
//-------------------------------------------------------------------------
@PointClass base(Item) studio("models/items/boxsrounds.mdl")= item_ammo_nails : "Box of Nails" []
@PointClass base(Item) studio("models/items/BoxBuckshot.mdl")= item_ammo_shells : "Box Shells" []
@PointClass base(Item) studio("models/weapons/w_missile_closed.mdl")= item_ammo_explosives : "RPG Round" []
@PointClass base(Item) studio("models/items/combine_rifle_ammo01.mdl") = item_ammo_cells : "High Precision Cells Ammo" []

//-------------------------------------------------------------------------
//
// Items
//
//-------------------------------------------------------------------------
@PointClass base(Item) studio("models/items/battery.mdl") = entity_armor1 : "Light Armor" []
@PointClass base(Item) studio("models/items/battery.mdl") = entity_armor2 : "Mrdium Armor" []
@PointClass base(Item) studio("models/items/battery.mdl") = entity_armor3 : "Heavy Armor" []

@PointClass base(Angles) studio() = entity_backpack : "An Perfect Dark weapon spawn point"
[
	model(studio) : "Item Model" : "models/items/backpack.mdl"

	Cells(integer)		: "Cells" : 50   : "How many cells to give to the player?"
	Nails(integer)		: "Nails" : 50   : "How many nails to give to the player?"
	Shells(integer)		: "Shells" : 50   : "How many shells to give to the player?"
	Rockets(integer)	: "Rockets" : 20   : "How many rockets to give to the player?"
	Grenades1(integer)	: "Grenades1" : 0  : "How many primary grenades to give the player?"
	Grenades2(integer)	: "Grenades2" : 0  : "How many secondary grenades to give the player?"
	Detpacks(integer)	: "Detpack" : 0    : "Give a detpack? (Only usable by Demoman)"
	Health(integer)		: "Health"	: 0    : "Health to give player."
	Armor(integer)		: "Armor"	: 0	   : "Armor to give the player."
	RespawnTime(integer) : "Respawn Time" : 10 : "Time to respawn."

	//Shouldwespawn(choices) : "Should We Respawn?" : 4 : 
	//	"Should we respawn after picked up? If NO then after picked up removed forever. "+
	//	"If YES then after some time passes we respawn unto the world." =
	//[
	//	4 : "NO"
	//	3 : "YES"
	//]	
]

//-------------------------------------------------------------------------
//
// Weapons
//
//-------------------------------------------------------------------------
@BaseClass color(0 0 200) base(Targetname, Angles) sphere(fademindist) sphere(fademaxdist) = Weapon
[
	spawnflags(Flags) =
	[
		1 : "Start constrained" : 0
	]

	output OnPlayerUse(void) : "Fires when the player +uses this weapon"
	output OnPlayerPickup(void) : "Fires when the player picks up this weapon"
	output OnCacheInteraction(void) : "Fires when the player 'proves' they've found this weapon. Fires on: Player Touch, +USE pickup."

	fademindist(float) : "Start Fade Dist/Pixels" : -1 : "Distance at which the prop starts to fade (<0 = use fademaxdist). If 'Screen Space Fade' is selected, this represents the number of pixels wide covered by the prop when it starts to fade."
	fademaxdist(float) : "End Fade Dist/Pixels" : 0 : "Maximum distance at which the prop is visible (0 = don't fade out). If 'Screen Space Fade' is selected, this represents the *minimum* number of pixels wide covered by the prop when it fades."
	fadescale(float) : "Fade Scale" : 1 : "If you specify a fade in the worldspawn, or if the engine is running under dx7, then the engine will forcibly fade out props even if fademindist/fademaxdist isn't specified." +
												 " This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades." +
]

@PointClass base(Weapon) studio("models/weapons/w_crowbar.mdl") = weapon_crowbar : "Crowbar" []
@PointClass base(Weapon) studio("models/weapons/w_crowbar.mdl") = weapon_knife : "Knife" []
@PointClass base(Weapon) studio("models/weapons/w_crowbar.mdl") = weapon_wrench : "Wrench/Spanner" []
@PointClass base(Weapon) studio("models/weapons/w_crowbar.mdl") = weapon_umbrella : "Umbrella" []
@PointClass base(Weapon) studio("models/weapons/w_models/w_medkit.mdl") = weapon_medkit : "Medkit" []
@PointClass base(Weapon) studio("models/weapons/w_models/w_tranquilizer.mdl") = weapon_tranq : "Tranquilizer" []
@PointClass base(Weapon) studio("models/weapons/w_smg_mp5.mdl") = weapon_nailgun : "Nailgun" []
@PointClass base(Weapon) studio("models/weapons/w_smg_mp5.mdl") = weapon_supernailgun : "Super Nailgun" []
@PointClass base(Weapon) studio("models/weapons/w_models/w_12gauge.mdl") = weapon_12gauge : "12Gauge/Shotgun" []
@PointClass base(Weapon) studio("models/weapons/w_shotgun.mdl") = weapon_shotgun : "Double Barrel Shotgun/Super Shotgun" []
@PointClass base(Weapon) studio("models/weapons/w_bazooka.mdl") = weapon_rpg : "Rocket Launcher" []
@PointClass base(Weapon) studio("models/weapons/w_smg_mp5.mdl") = weapon_ac : "Assault Cannon" []
@PointClass base(Weapon) studio("models/weapons/w_smg_mp5.mdl") = weapon_railgun : "Railgun" []
@PointClass base(Weapon) studio("models/weapons/w_eq_fraggrenade.mdl") = weapon_grenade : "HE Grenade" []
@PointClass base(Weapon) studio("models/weapons/w_eq_fraggrenade.mdl") = weapon_grenade_concussion : "Concussion Grenade" []
@PointClass base(Weapon) studio("models/weapons/w_eq_fraggrenade.mdl") = weapon_grenade_emp : "EMP Grenade" []
@PointClass base(Weapon) studio("models/weapons/w_eq_fraggrenade.mdl") = weapon_grenade_napalm : "Napalm Grenade" []